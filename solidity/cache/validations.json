{
  "version": "3.4",
  "log": [
    {
      "@openzeppelin/contracts/access/Ownable.sol:Ownable": {
        "src": "@openzeppelin\\contracts\\access\\Ownable.sol:20",
        "inherit": [
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "@openzeppelin\\contracts\\access\\Ownable.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/IERC1363.sol:IERC1363": {
        "src": "@openzeppelin\\contracts\\interfaces\\IERC1363.sol:16",
        "inherit": [
          "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "transferAndCall(address,uint256)",
          "transferAndCall(address,uint256,bytes)",
          "transferFromAndCall(address,address,uint256)",
          "transferFromAndCall(address,address,uint256,bytes)",
          "approveAndCall(address,uint256)",
          "approveAndCall(address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC1155Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:113",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC721Errors": {
        "src": "@openzeppelin\\contracts\\interfaces\\draft-IERC6093.sol:55",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:29",
        "inherit": [
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\extensions\\IERC20Metadata.sol:11",
        "inherit": [
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20": {
        "src": "@openzeppelin\\contracts\\token\\ERC20\\utils\\SafeERC20.sol:18",
        "version": {
          "withMetadata": "32acf2f23054b8245d02f4e91041914795a20b8ca3c6d1ada46c2a3287f2f0f5",
          "withoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db",
          "linkedWithoutMetadata": "a64c6cf9c6ba9368f5132c93a0196b3204a7963dbb4dd05dfddb4ab23126b8db"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/Context.sol:Context": {
        "src": "@openzeppelin\\contracts\\utils\\Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:25",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:47"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol:IERC165": {
        "src": "@openzeppelin\\contracts\\utils\\introspection\\IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/BorrowProtocol.sol:BorrowProtocol": {
        "src": "contracts\\BorrowProtocol.sol:13",
        "version": {
          "withMetadata": "4a6587bd5f1b22f6e844707fbefb131fd2d8bb62b283bbcd50b0b54a42e92076",
          "withoutMetadata": "7711715aeefb223ec315363568c1dd5e9b83bf7a8ca34cdbdec9a5a6e2c71b68",
          "linkedWithoutMetadata": "7711715aeefb223ec315363568c1dd5e9b83bf7a8ca34cdbdec9a5a6e2c71b68"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/utils/Context.sol:Context",
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,address)",
          "setMinHealthFactor(uint256)",
          "setLiquidationThreshold(address,uint256)",
          "getLiquidationThreshold(address)",
          "setMinCollateralAmount(address,uint256)",
          "getMinCollateralAmount(address)",
          "setMinimumDuration(uint256)",
          "getMinimumDuration()",
          "calculateHealthFactorSimulated(uint256,uint256,address)",
          "calculateTotalDue(address,uint256)",
          "getMinHealthFactor()",
          "Borrow(address,uint256,address,uint256,uint256,uint256)",
          "getAllActiveLoans()",
          "getUserLoans(address)",
          "payLoan(uint256)",
          "fundPool(address,uint256)",
          "liquidate(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BorrowProtocol",
            "src": "contracts\\BorrowProtocol.sol:73"
          },
          {
            "kind": "state-variable-assignment",
            "name": "minHealthFactor",
            "src": "contracts\\BorrowProtocol.sol:37"
          },
          {
            "kind": "state-variable-assignment",
            "name": "minimumDuration",
            "src": "contracts\\BorrowProtocol.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "yieldPool",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IYieldPool)1582",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:16"
            },
            {
              "label": "userLoans",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(Loan)1616_storage))",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:32"
            },
            {
              "label": "liquidationThresholds",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:33"
            },
            {
              "label": "userLoanIds",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:34"
            },
            {
              "label": "minimumCollateralAmount",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:35"
            },
            {
              "label": "minHealthFactor",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:37"
            },
            {
              "label": "minimumDuration",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:38"
            },
            {
              "label": "currentLoanId",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:39"
            },
            {
              "label": "allActiveLoans",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_struct(Loan)1616_storage)dyn_storage",
              "contract": "BorrowProtocol",
              "src": "contracts\\BorrowProtocol.sol:40"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_struct(Loan)1616_storage)dyn_storage": {
              "label": "struct BorrowProtocol.Loan[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IYieldPool)1582": {
              "label": "contract IYieldPool",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint256,t_struct(Loan)1616_storage))": {
              "label": "mapping(address => mapping(uint256 => struct BorrowProtocol.Loan))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Loan)1616_storage)": {
              "label": "mapping(uint256 => struct BorrowProtocol.Loan)",
              "numberOfBytes": "32"
            },
            "t_struct(Loan)1616_storage": {
              "label": "struct BorrowProtocol.Loan",
              "members": [
                {
                  "label": "loanId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "collateralAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "collateralToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "borrowToken",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "borrowAmount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "duration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "6"
                },
                {
                  "label": "interestRate",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "7"
                },
                {
                  "label": "userAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "8"
                },
                {
                  "label": "amountPaid",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "9"
                },
                {
                  "label": "active",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "10"
                }
              ],
              "numberOfBytes": "352"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/BorrowProtocol.sol:IYieldPool": {
        "src": "contracts\\BorrowProtocol.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isTokenAllowed(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/YieldPool.sol:YieldPool": {
        "src": "contracts\\YieldPool.sol:14",
        "version": {
          "withMetadata": "6adf5d7a653cf0ae7b97ffc10d862c41d7813b86871929d69c862c103a2449c9",
          "withoutMetadata": "b6a2e3ab8e82c84c78cab3c82d1f009684a126936e73599c789defdebc2ed3b0",
          "linkedWithoutMetadata": "b6a2e3ab8e82c84c78cab3c82d1f009684a126936e73599c789defdebc2ed3b0"
        },
        "inherit": [
          "@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard"
        ],
        "libraries": [
          "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,uint256,uint256,uint256)",
          "updateYieldParameters(uint256,uint256,uint256)",
          "getYieldToken()",
          "getYieldRate()",
          "getMinStakeDuration()",
          "getMaxStakeDuration()",
          "getUserTokenBalances()",
          "isTokenAllowed(address)",
          "modifyAllowedTokens(address,bool)",
          "removeAllowedToken(address)",
          "addAllowedTokens(address)",
          "getAllowedTokens()",
          "getPosition(uint256)",
          "getTotalStakers()",
          "getTotalValueLocked()",
          "getActivePositions()",
          "deposit(address,uint256,uint256)",
          "withdraw(uint256)",
          "unstake(uint256)",
          "calculateExpectedYield(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YieldPool",
            "src": "contracts\\YieldPool.sol:75"
          },
          {
            "kind": "state-variable-assignment",
            "name": "owner",
            "src": "contracts\\YieldPool.sol:48"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "@openzeppelin\\contracts\\utils\\ReentrancyGuard.sol:40"
            },
            {
              "label": "yieldRate",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:17"
            },
            {
              "label": "minDuration",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:19"
            },
            {
              "label": "maxDuration",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:20"
            },
            {
              "label": "yieldTokenV2",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(YieldToken)4390",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:23"
            },
            {
              "label": "totalStakers",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:24"
            },
            {
              "label": "totalValueLocked",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:25"
            },
            {
              "label": "nextPositionId",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:26"
            },
            {
              "label": "allowedTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_array(t_address)dyn_storage",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:28"
            },
            {
              "label": "activeStakers",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:29"
            },
            {
              "label": "allowedTokensMap",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:31"
            },
            {
              "label": "activePositionsCount",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:32"
            },
            {
              "label": "stakerIndex",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:33"
            },
            {
              "label": "userTokenBalance",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:34"
            },
            {
              "label": "positions",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_array(t_struct(Position)2547_storage)dyn_storage)",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:46"
            },
            {
              "label": "positionOwners",
              "offset": 0,
              "slot": "15",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:47"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "16",
              "type": "t_address",
              "contract": "YieldPool",
              "src": "contracts\\YieldPool.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(Position)2547_storage)dyn_storage": {
              "label": "struct YieldPool.Position[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(YieldToken)4390": {
              "label": "contract YieldToken",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_array(t_struct(Position)2547_storage)dyn_storage)": {
              "label": "mapping(address => struct YieldPool.Position[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(Position)2547_storage": {
              "label": "struct YieldPool.Position",
              "members": [
                {
                  "label": "positionAddress",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "token",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "id",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                },
                {
                  "label": "startTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "4"
                },
                {
                  "label": "lockDuration",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "5"
                },
                {
                  "label": "withdrawn",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "6"
                }
              ],
              "numberOfBytes": "224"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      },
      "contracts/YieldToken.sol:YieldToken": {
        "src": "contracts\\YieldToken.sol:11",
        "version": {
          "withMetadata": "3bc334675982eb14cd5b0881af0ff92e3a7844a3336ac8bff51e10b6b691ea13",
          "withoutMetadata": "344fa0a3b301830811ab66aed8aac08ef2a6a08f8514e8fb9b171480578f68a0",
          "linkedWithoutMetadata": "344fa0a3b301830811ab66aed8aac08ef2a6a08f8514e8fb9b171480578f68a0"
        },
        "inherit": [
          "@openzeppelin/contracts/access/Ownable.sol:Ownable",
          "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
          "@openzeppelin/contracts/interfaces/draft-IERC6093.sol:IERC20Errors",
          "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:IERC20Metadata",
          "@openzeppelin/contracts/token/ERC20/IERC20.sol:IERC20",
          "@openzeppelin/contracts/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "(address,string,string)",
          "mintForStudent(address,uint256)",
          "InsufficientMint(address,uint256)",
          "getIsStudent(address)",
          "setMinter(address,bool)",
          "removeMinter(address)",
          "getMinters()",
          "mint(address,uint256)",
          "mintToPool(address)",
          "setStudentStatus(address,bool)",
          "burn(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "YieldToken",
            "src": "contracts\\YieldToken.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:30"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:32"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:34"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:36"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin\\contracts\\token\\ERC20\\ERC20.sol:37"
            },
            {
              "label": "_owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "Ownable",
              "src": "@openzeppelin\\contracts\\access\\Ownable.sol:21"
            },
            {
              "label": "lastMintTime",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "YieldToken",
              "src": "contracts\\YieldToken.sol:13"
            },
            {
              "label": "isStudent",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "YieldToken",
              "src": "contracts\\YieldToken.sol:14"
            },
            {
              "label": "isMinter",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "YieldToken",
              "src": "contracts\\YieldToken.sol:17"
            },
            {
              "label": "minters",
              "offset": 0,
              "slot": "9",
              "type": "t_array(t_address)dyn_storage",
              "contract": "YieldToken",
              "src": "contracts\\YieldToken.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.8.28"
      }
    }
  ]
}